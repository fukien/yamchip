<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8">
<title>Graph Query By Example Tuples</title>
<style type="text/css">
.conbox
{
    margin-top: 120px;
}
.rowbox
{
    margin-bottom:10px;
}
.fixbox
{
    position:fix;
}
.spnbox {
	width: 0px;
	margin-top: 5px;
	padding: 0px 3px !important;
	margin-left: 1px !important;
    font-size: 0px;
}

.inputbox {
	padding: 0px 0px !important;
}

.btnbox {
	padding: 0px 3px !important;
	margin-left: 0px !important;
	margin-top: 5px;
}

.btn-grp {
	
}

.btn-small {
	padding: 0px 3px !important;
	margin-top: 5px;
	padding-bottom: 0px !important;
	border-bottom-width: 0px;
}

.inputer {
	background: transparent;
	border: 0;
	outline: 0;
	margin-top: 5px;
	font-size: 14px;
	width:64px;
}

.entity-list {
	letter-spacing: 0px;
	cursor: text;
	font-size: 0px !important;'
}
.gobox
{
    
}
 .nav-tabs
{
    text-align: center;
    height: 40px;
    line-height: 40px;
}
 .nav-tabser
{
    text-align: center;
    height: 40px;
    line-height: 40px;
}
.input-grp
{
    margin-bottom:7px;
}
</style>
<link href="css/bootstrap.min.css" rel="stylesheet" />
<link href="css/select2.min.css" rel="stylesheet" />
<!--  
  <link href="css/bootstrap-theme.min.css?data:text/css;charset=utf-8," data-href="css/bootstrap-theme.min.css" rel="stylesheet" id="bs-theme-stylesheet">
-->
<script src="js/jquery.min.js"></script>
<script type="text/javascript" src="js/bootstrap.min.js"></script>
<script src="js/select2.full.min.js"></script>
<script type="text/javascript">
function html_encode(str)   
{   
  var s = "";   
  if (str.length == 0) return "";   
  s = str.replace(/&/g, "&gt;");   
  s = s.replace(/</g, "&lt;");   
  s = s.replace(/>/g, "&gt;");   
  s = s.replace(/ /g, "&nbsp;");   
  s = s.replace(/\'/g, "&#39;");   
  s = s.replace(/\"/g, "&quot;");   
  s = s.replace(/\n/g, "<br>");   
  return s;   
}   
 
function html_decode(str)   
{   
  var s = "";   
  if (str.length == 0) return "";   
  s = str.replace(/&gt;/g, "&");   
  s = s.replace(/&lt;/g, "<");   
  s = s.replace(/&gt;/g, ">");   
  s = s.replace(/&nbsp;/g, " ");   
  s = s.replace(/&#39;/g, "\'");   
  s = s.replace(/&quot;/g, "\"");   
  s = s.replace(/<br>/g, "\n");   
  return s;   
}
function getQueryString(name)
{
	var r = window.location.search.substr(1);
	var rs = r.split("&");
	var re = null;
	for(var i = rs.length-1;i>=0;i--)
	{
		if(rs[i].indexOf(name)!=-1)
		{
			re = rs[i].substring(name.length+1);
		}
	}
	if(re!=null)return unescape(re);
	return null;
}
function NameNode(index,mid,name){
	this.index = index;
	this.mid = mid;
	this.name = name;
}

	$(document).ready(function() {
		old_init();
		rowEntities[0]=new Array(100);
		rowNum[0]=0;
		inputs[0]=new Array(1000);
		inputsNum[0]=0;
		row_number++;
        var qb= getQueryString("q");
        if(qb!=null)
        {
        	console.log(qb);
        	addAll(qb);
        }
        $(window).scroll(function() {
            //$(document).scrollTop() 获取垂直滚动的距离
            //$(document).scrollLeft() 这是获取水平滚动条的距离
            if ($(document).scrollTop() <= 0) {
                console.debug("滚动条已经到达顶部为0");
            }


            if ($(document).scrollTop() >= $(document).height() - $(window).height()) {
                //console.debug("滚动条已经到达底部为" + $(document).scrollTop());
                if($("#table tbody tr").size()>0)
                {
                	//getData(true);
                }
            }
        
        });

	});

	var go_enable = true;
	var mouses = false;
	var row_number = 1;
	var rowEntities = new Array(100);
	var rowNum = new Array(100);
	var inputs = new Array(100);
	var inputsNum = new Array(100);
	var tag = getQueryString("tag")==null?"en":getQueryString("tag");
	function add(name, mid,gid) {
		gid = parseInt(gid);
		rowEntities[gid][rowNum[gid]]=new NameNode(rowNum[gid],mid,name);
		rowNum[gid]++;
		refreshPanel(gid);
		$("[group-id='"+gid+"'] .inputer").val("");
		var ind = inputsNum[gid];
		inputs[gid][ind%1000] = "";
		inputsNum[gid]++;
	}
	function addAll(q)
	{
		var rowE = q.split("*");
		for(var i = 0;i<rowE.length;i++)
		{
			var midSet = rowE[i].split("::");
			var arr = rowEntities[i];
			if(typeof(arr)=="undefined")
			{
				arr=new Array(100);
				rowEntities[i]=arr;
			}
			if(typeof(inputs[i])=="undefined")
			{
				inputs[i]=new Array(1000);
				inputsNum[i]=0;
			}
			rowNum[i] = 0;
			for(var j =0;j<midSet.length;j++)
			{
				var mid = midSet[j];
				var kv = mid.split("-");
				var node = null;
				if(kv.length==0)
				{
					continue;
				}
				
				if(kv.length>1)node=new NameNode(rowNum[i],kv[0],kv[1]);
				else node = new NameNode(rowNum[i],kv[0],kv[0]);
				arr[rowNum[i]]=node;
				rowNum[i]++;
			}
		}
		row_number = rowE.length;
		autoFit();
	}
	function drop(id,gid)
	{
		for(var i=id;i<rowNum[parseInt(gid)];i++)
		{
			rowEntities[gid][i]=rowEntities[gid][i+1];
		}
		if(rowNum[parseInt(gid)]>0){
			rowNum[parseInt(gid)]--;
			//console.log('rowNum[gid]=]'+rowNum[gid]);
		}
		//autoFit();
		refreshPanel(parseInt(gid));
	}
	function dropLast(gid)
	{
		drop(rowNum[gid],gid);
	}
	function autoFit()
	{
//		$(".entity-list").html("");
		$("#append-group").html("");
		var newRowEntities = new Array(100);
		var newRowNum = new Array(100);
		var newRowNumber = 0;
		var newInputs = new Array(100);
		var newInputsNum = new Array(100);
		for(var i = 0;i<row_number;i++)
		{
			var array = rowEntities[i];
			var num = rowNum[i];
			var inputers = inputs[i];
			var inum = inputsNum[i];
			if(typeof(num)!="undefined"&&!isNaN(num)&&(num>0||(inum>0&&typeof(inputers[inum-1])!="undefined"&&inputers[inum-1].length>0)))
			{
				newRowEntities[newRowNumber]=array;
				newRowNum[newRowNumber]=num;
				newInputs[newRowNumber]=inputers;
				newInputsNum[newRowNumber]=inum;
				newRowNumber++;
			}
		}
		rowEntities = newRowEntities;
		rowNum = newRowNum;
		row_number = newRowNumber;
		inputs = newInputs;
		inputsNum = newInputsNum;
		if(row_number>=1)
		{
			refreshPanel(0);
		}
		if(row_number>1)
		{
			for(var i=1;i<row_number;i++)
			{
				var grp = $("#group-template").html();
				grp = grp.replace(/{{groupId}}/g,i);
				$("#append-group").append(grp);
				
				refreshPanel(i);
			}
			var mtop=120+(row_number-1)*40;
			$(".conbox").css("margin-top",mtop+"px");
		}
	}
	function refreshPanel(gid)
	{
	 	var content = $("#btn-template").html();
	 	var html = "";
	 	html+="<span class=‘spnbox’></span>";
	 	for(var i=0;i<rowNum[gid];i++)
	 	{
	 		var item = content.replace(/{{name}}/g,html_encode(rowEntities[gid][i].name));
	 		item = item.replace(/{{index}}/g,i);
	 		item = item.replace(/{{mid}}/g,html_encode(rowEntities[gid][i].mid));
	 		html+=item;
	 	}
	 	var inputers = $("#input-template").html();
	 	inputers=inputers.replace(/{{groupId}}/g,gid);
	 	html+=inputers;
	 	$("[group-id='"+gid+"'] .entity-list").html(html);
	 //	console.log(html);
	 	bind_input();
	 	$("[group-id='"+gid+"'] .inputer").focus();
	 	if(typeof(inputsNum[gid])!="undefined")
	 	{
	 		if(typeof(inputs[gid])!="undefined")
	 		{
	 			$("[group-id='"+gid+"'] .inputer").val(inputs[gid][inputsNum[gid]-1]);
	 		}
	 	}
	 	else
	 	{
	 		//console.log("inputsNum gid "+gid+" ");
	 	}
	 	$("#list").hide();
	}
	function old_init() {
		$("#list").hide();
		$("#template").hide();
		$("#btn-template").hide();
		$("#input-template").hide();
        $("#bottom-template").hide();
        $("#group-template").hide();
		$("#list").mouseover(function() {
			mouses = true;
			//console.debug("over");
		});
		$("#list").mouseout(function() {
			mouses = false;
			//  console.debug("out");
			if ($(".inputer").is(":focus") == false) {
				$("#list").html("");
				$("#list").hide();
			}
		});
		bind_input();
		bind_add();
		$("#go").click(function(){
			if(go_enable)
			{
				go();
			}
			$(this).blur();
		});
	}
	function bind_add()
	{
		$("#addBtn").click(function(){
			var grp = $("#group-template").html();
			rowEntities[row_number]=new Array(100);
			rowNum[row_number]=0;
			inputs[row_number]=new Array(1000);
			inputsNum[row_number]=0;
			grp = grp.replace(/{{groupId}}/g,row_number++);
			$("#append-group").append(grp);
			bind_input();
			$(this).blur();
			var mtop=120+(row_number-1)*40;
			$(".conbox").css("margin-top",mtop+"px");
		});
	}
	function bind_input()
	{
		$(".inputer").unbind();
		$(".entity-list").unbind();
		$(".inputer").bind('input propertychange', function() {
			//getAndShow();
		//	console.log("binding...");
				var gids = $(this).attr("grpid");
		                   var $this = $(this);
                   //console.log($this);
                   var text_length = $this.val().length;//获取当前文本框的长度
                   var current_width = parseInt(text_length) *16;//该16是改变前的宽度除以当前字符串的长度,算出每个字符的长度
                   if(current_width<64)current_width=64;
                  // console.log(current_width)
                   $this.css("width",current_width+"px");
			timeouter(gids);
		});
		$(".inputer").blur(function() {
			if (!mouses) {
				$("#list").html("");
				$("#list").hide();
			}
		});
		$(".inputer").bind("keydown",function(e){

			e =e?e:event;
			if(e.keyCode==8&&$(this).val().length<1)
			{
				var gids = $(this).attr("grpid");
				//console.log($(this));
				dropLast(parseInt(gids));
			}
		});
		$(".inputer").bind("keyup",function(e){
			var c = $(this).val();
			//console.log(c.substring(c.length-1));
			if(typeof(c)!="undefined"&&c.length>1&&c.substring(c.length-1)==";")
			{
				var gids = $(this).attr("grpid");
				c = c.substring(0,c.length-1);
				//console.log(c);
				var kv = c.split("-");
				if(kv.length==1)
				{
					if(c.toLowerCase()=="blank_node")
					{
						add("Blank_node","m.0aeiou",gids);
						$("#list").html("");
						$("#list").hide();
					}
					else
					{
						add(kv[0],kv[0],gids);
					}
				}else if(kv.length>1)
				{
					add(kv[1],kv[0],gids);
				}
				$(this).val("");
			}
		});
		$(".entity-list").click(function(){
			var gid = $(this).attr("grpid");
			$("[group-id='"+parseInt(gid)+"'] .inputer").focus();
		});
	}
	
	function timeouter(gid)
	{
		//TODO 
		// a list store index
		// a list to store input
		// TODO 
		var ind = inputsNum[gid];
		inputs[gid][ind%1000] = $("[group-id='"+parseInt(gid)+"'] .inputer").val();
		setTimeout("getAndShow(" + ind + ","+gid+")", 500);
		inputsNum[gid]++;
		
	}
	var current_url = "";
	var web_from = 0;
	var web_len = 200;
	var web_highscore=false;
	var enable_backward=true;
	var web_depth=1;
	var needName = getQueryString("needName")==null?false:"true"==getQueryString("needName");
	function go()
	{

		autoFit();

		var midSet = "";
		var maxSize = rowNum[0];
		if(maxSize<2)
		{
			alert("Entity number must be two or more！");
		}
		for(var gid = 0;gid<row_number;gid++)
		{
			var midArray = "";
			if(maxSize!=rowNum[gid])
			{
				alert("each row hash different number of entites!");
				return ;
			}
			for(var i=0;i<rowNum[gid];i++)
			{
				midArray+=rowEntities[gid][i].mid;
				if(i!=rowNum[gid]-1)midArray+=":";
			}
			midSet +=midArray;
			if(gid!=row_number-1)
			{
				midSet+="*";
			}
		}
		var web_url="web/mgqbe/mid/"+midSet;
		current_url = web_url;
		
		$("#go").addClass("disabled");
		go_enable = false;
		getData2(false);
		//console.log(url);
	}
	function Tuple(){
		this.items = new Array();
	}
	function FormData(){
		this.group = new Array();
		this.needName = true;
		this.enableBackward = false;
		this.depth = 1;
		this.tag = tag;
		this.top = 2;
		this.union = true;
		this.type = new Array();
	}
	function parseData(data){
		var append =false;
		go_enable = true;
		$("#go").removeClass("disabled");
		if(typeof(data.totalTime) != "undefined"&&data.totalTime!=null)
		{
			$("#time").html("Total Time:"+data.totalTime+" ms");
		}
		if(!append)
		{
			web_from = 0;
			$("#table tbody").html("");
			$("#table thead tr").html("");
		}
		//console.log(data);
		var thead = "";
		var tbody = "";
		var max_len = 0;
		if(data.code<0)
		{
			alert(data.info);
		}else
		{
			var cnt = 0;
			
			for(var o in data.res)
			{
				cnt++;
				var rows = "<tr>";
				var objas = data.res[o];
				var td_len = 0;
				for(var oo in objas)
				{
					td_len ++;
					var nodes = objas[oo];
					
					var mid = nodes.mid;
					mid = html_encode(mid);
					var name = nodes.name[tag];
					if(typeof(name)=="undefined")
					{
						for(var c in nodes.name)
						{
							name = nodes.name[c];
							break;
						}
					}
					if(typeof(name)=="undefined")
					{
						name=	mid;
					}
					rows+="<td>"+"<a href='javascript:void(0)' title='"+mid+"''>"+name+"</a>"+"</td>";
				}
				if(td_len>max_len)max_len=td_len;
				rows+="</tr>";
				tbody+=rows;
			}
			if(append)
			{
				$("#table tbody").append(tbody);
			}
			else
			{
				$("#table tbody").html(tbody);
				var thead = "";
				for(var i=0;i<max_len;i++)
				{
					thead+="<th>col"+i+"</th>";
				}
				$("#table thead tr").html(thead);
			}
			web_from+=cnt;
			if(data.pathSet!=null)
			{
				$("#bottom-path").html("");
				for(var odx in data.pathSet.pathList)
				{
					var path =  data.pathSet.pathList[odx];
					var label = path.label.replace(/</g,'&lt;').replace(/>/g,'&gt;');
					var disp = path.from+" "+label+" "+path.to;
					var content = $("#bottom-template").html();
					content = content.replace(/{{path}}/g, disp);
					$("#bottom-path").append(content);
				}
			}
			if(cnt<20&&append==false&&query.indexOf("m.0aeiou")<=0)
			{
				//getData(true);
			}
				
		}
	}
	function getData2(){
		var formData = new FormData();
		query = "";
		for(var gid = 0;gid<row_number;gid++)
		{
			var midArray = "";
			var tuple = new Tuple();
			for(var i=0;i<rowNum[gid];i++)
			{
				midArray+=rowEntities[gid][i].mid+"-"+rowEntities[gid][i].name;
				if(i!=rowNum[gid]-1)midArray+="::";
				tuple.items.push(rowEntities[gid][i].mid);
			}
			query +=midArray;
			if(gid!=row_number-1)
			{
				query+="*";
			}
			formData.group.push(tuple);
		}
		var base = window.location.pathname+"?q="+query+"&tag="+tag;
		$("#share").attr("href",base);
		$.ajax({
			dataType: "json",
	        contentType:'application/json; charset=utf-8',//关键是要加上这行
	        traditional:true,//这使json格式的字符不会被转码
	        data:JSON.stringify(formData),
	        type: "POST", 
	        url:"web/gqbe",
			success:function(data)
			{
				parseData(data);
			},
			error: function(XMLHttpRequest, textStatus, errorThrown) {
				go_enable = true;
				$("#go").removeClass("disabled");
				   }
		});
	}
	function getData(append)
	{
		if(!append)
		{
			web_from = 0;
			$("#table tbody").html("");
			$("#table thead tr").html("");
		}
		var query = "";
		//var midSet = "";
		for(var gid = 0;gid<row_number;gid++)
		{
			var midArray = "";
			for(var i=0;i<rowNum[gid];i++)
			{
				midArray+=rowEntities[gid][i].mid+"-"+rowEntities[gid][i].name;
				if(i!=rowNum[gid]-1)midArray+=":";
			}
			query +=midArray;
			if(gid!=row_number-1)
			{
				query+="*";
			}
		}
	
		var base = window.location.pathname+"?q="+query+"&tag="+tag;
		$("#share").attr("href",base);
		$.ajax({
			data:
				{
				"from":web_from,
				"len":web_len,
				"highScore":web_highscore,
				"enableBackward":enable_backward,
				"depth":web_depth,
				"tag":tag,
				"needName":needName
				},
			type:'GET',
			dataType:'json',
			url:current_url,
			success:function(data)
			{
				parseData(data);
			},
			error: function(XMLHttpRequest, textStatus, errorThrown) {
				go_enable = true;
				$("#go").removeClass("disabled");
				   }
		});
	}
	function delRow(gid)
	{
		gid = parseInt(gid);
		rowNum[gid]=0;
		inputs[gid][inputsNum[gid]-1]="";
		autoFit();
	}
	function getAndShow(inds,gid)
	{
		//$("#list").hide();
		var input = $("[group-id='"+parseInt(gid)+"'] .inputer").val();
		var len = input.length;
		if(inputs[gid][inds%1000]==input&&len>2)
		{
			var item = $("#template").html();
			$.ajax({
				url:'lucene/fuzzy',
				data:
					{
						"keyword":input,
						"top":30,
						"usename":$("input[name='stype']:checked").val()
					},
				dataType:'json',
				type:'POST',
				success:function(data)
				{

					$("#list").html("");
					$("#list").hide();
					for(var o in data.list)
					{
						var obj = data.list[o];
						var it = item;
						if(obj.name[tag]!=null)
						{
							it = it.replace(/{{name}}/g,html_encode(obj.name[tag]));
							it = it.replace(/{{tag}}/g,tag);
						}else
						{
							it = it.replace(/{{name}}/g,html_encode(obj.name['en']));
							it = it.replace(/{{tag}}/g,"en");
						}
						it = it.replace(/{{mid}}/g,html_encode(obj.mid));
						it = it.replace(/{{text}}/g,obj.description);
						it = it.replace(/{{predicate}}/g,html_encode(obj.predicate));
						it = it.replace(/{{groupId}}/g,gid);	
						var type = "";
						
						$("#list").append(it);
					}
					if(inds==inputsNum[gid]-1){
						$("#list").show();
						//inputsNum[gid]++;
					}
				}
			});
			oldSize = len;
		}

		//	item = item.replace(/{{link}}/g,"demo link");
		//	item = item.replace(/{{name}}/g,"name demo");
		//		item = item.replace(/{{text}}/g,"text demo");
		//		$("#list").append(item);
		//		
	}
	//TODO ADD
</script>
</head>

<body>
	<div class="navbar navbar-default navbar-fixed-top">
		<div class="row">
			<div class="col-md-12"></div>
		</div>
		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-8 h1" align="center">Fucking Guan Hua</div>
			<div class="col-md-2"></div>
		</div>
		<div class="row rowbox">
			<div class="col-md-4"></div>
			<div class="col-md-4">
				<form>
				<div class="input-group input-grp"  group-id="0">
					<div id="entity-list"
						class="form-inline form-control inputbox entity-list" grpid="0">
<!-- 
						<div class="btn-group dropup">
							<button type="button" class="btn btn-primary btn-xs btnbox">small
								button</button>
							<button type="button" class="btn btn-primary btn-xs btn-small" aria-label="Close"><span aria-hidden="true">&times;</span></button>							
						</div>
		-->				
						<span class="spnbox"></span>
						<div id="input" class="form-group">
							<label class="sr-only" for="exampleInputEmail3">Input
								Entity</label> <input id="inputer" type="text" class='inputer' placeholder="" grpid="0">
						</div>
					</div>
					<span class="input-group-btn">
        <button id="addBtn" class="btn btn-default" type="button">+</button>
        <button id="go" class="btn btn-default" type="button">Search</button>
      </span>
      </div>
      <div id="append-group">

      </div>

					<!--  
   <button type="submit" class="btn btn-primary">Go</button>
  -->
					<div class="list-group" id="list"></div>
					<div id="template">
						<a href="javascript:add('{{name}}','{{mid}}','{{groupId}}');"
							class="list-group-item">
							    <h4 class="list-group-item-text">{{name}}</h4>
     <p class="list-group-item-text">{{predicate}}:</p>
    <p class="list-group-item-text">{{text}}</p>
						</a>
					</div>
					<div id="btn-template">
						<div class="btn-group dropup">
							<button type="button" class="btn btn-primary btn-xs btnbox">{{name}}</button>
							<button type="button" class="btn btn-primary btn-xs btn-small" aria-label="Close" onclick="javascript:drop({{index}})"><span aria-hidden="true">&times;</span></button>	
						</div>
													<span class="spnbox"></span>
					</div>
					<div id="bottom-template">
					                                <div class="col-md-6 col-sm-6 col-xs-6" align="center"><li><a href="javascript:void(0)">{{path}}</a></li></div>
					</div>
					<div id="input-template">
					<div id="input" class="form-group">
							<label class="sr-only" for="exampleInputEmail3">Input
								Entity</label> <input id="inputer" type="text" class='inputer' placeholder="" grpid="{{groupId}}">
						</div>
					</div>
					<div id = "group-template">
						      					<div class="input-group input-grp" group-id="{{groupId}}">
					<div id="entity-list"
						class="form-inline form-control inputbox entity-list" grpid="{{groupId}}">
<!-- 
						<div class="btn-group dropup">
							<button type="button" class="btn btn-primary btn-xs btnbox">small
								button</button>
							<button type="button" class="btn btn-primary btn-xs btn-small" aria-label="Close"><span aria-hidden="true">&times;</span></button>							
						</div>
		-->				
						<span class="spnbox"></span>
						<div id="input" class="form-group" >
							<label class="sr-only" for="exampleInputEmail3">Input
								Entity</label> <input id="inputer" type="text" class='inputer' placeholder="" grpid="{{groupId}}">
						</div>
					</div>
					<span class="input-group-btn">
        <button id="del" class="btn btn-default" type="button" onclick="javascript:delRow({{groupId}})">-</button>
      </span>
      </div>
					</div>
					<!-- 
<span><button type="button" class="btn btn-default">Go</button>
  	</span>
  	 -->
				</form>

			</div>
			<div class="col-md-4">
							<div class="form-inline">
					
						<div class="radio">
						<label> <input type="radio" name="stype" id="stype"
							value="true"> Name
						</label>
					</div>
					<div class="radio">
						<label> <input type="radio" name="stype" id="stype"
							value="false" checked> Full Text
						</label>
						</div>
						<label><a id = "share" href="">Share this query</a></label>
				</div>
			</div>
		</div>
	</div>
		<div class="container-fluid conbox">
		<div class="row">
			<div class="col-md-2"></div>
			<div class="col-md-8">
			<div class="table-responsive">
			<table id="table" class="table table-striped table-hover" ><thead><tr></tr></thead><tbody></tbody></table>
			</div>
			</div>
			<div class="col-md-2"></div>
		</div>
		<div id="tab-row" class="row nav-tabser">
		
		</div>
	</div>
	        <div class="main_nav_bottom">
                <nav class="navbar navbar-default navbar-fixed-bottom">
                    <div class="container-fluid" align="center">
                        <ul class="nav nav-tabs nav-tabs-justified">
                            <div id="bottom-path" class="row" align="center">

                            </div>
                            
                        </ul>
                        <div id="time" class="row">
                        </div>
                    </div>
                </nav>
            </div>  
</body>
</html>
